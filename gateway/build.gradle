plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.8'
    id 'io.spring.dependency-management' version '1.1.4'
}

//group = 'com.gateway'
//version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}



dependencies {

    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.springframework.boot:spring-boot-starter-web'

//    compileOnly 'org.projectlombok:lombok'
//    annotationProcessor 'org.projectlombok:lombok'

    // jsonwebtoken(okta), java-jwt는 oath0에서 만들었다
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'

    implementation project(':common') // root project의 settings.gradel에 선언, 이름 같아야 함, root project 제외 settings.gradel은 삭제

//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.security:spring-security-test'
}

ext {
    set('springCloudVersion', "2022.0.3")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.register("prepareKotlinBuildScriptModel") {}// implementation project 후 에러나서 설정

tasks.named('test') {
    useJUnitPlatform()
}

bootJar{
    archivesBaseName = 'j-gateway'
    archiveFileName = 'j-gateway.jar'
    archiveVersion = "0.0.1"
}
